ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)
xmax=max(x)+5
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)
xmax=max(x)+5
ymin=min(y)
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)
xmax=max(x)+5
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)
xmax=max(x)+3
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)
xmax=max(x)+3
ymin=min(y)
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)
xmax=max(x)+3
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.4,lwd = 0.25)
axis(side=2,cex.axis=0.4, lwd = 0.25)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 2,cex.axis=0.4,lwd = 0.25)
axis(side=2,cex.axis=0.4, lwd = 0.25)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 2,cex.axis=1,lwd = 0.25)
axis(side=2,cex.axis=1, lwd = 0.25)
box(which = "plot", lty = "solid", lxd=1)
axis(side = 2,cex.axis=1,lwd = 0.25)
axis(side=2,cex.axis=1, lwd = 0.25)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.4,lwd = 0.25)
axis(side=2,cex.axis=0.4, lwd = 0.25)
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.4,lwd = 0.25)
axis(side=2,cex.axis=0.4, lwd = 0.25)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)-1
xmax=max(x)+3
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.4,lwd = 0.25)
axis(side=2,cex.axis=0.4, lwd = 0.25)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
? plot
plot(gorg_geo$Longitud,gorg_geo$Latitud, add= TRUE)
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
plot(gorg_geo$Longitud,gorg_geo$Latitud, add= TRUE)
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
plot(gorg_geo$Longitud,gorg_geo$Latitud, add= TRUE)
list.rasters <- (list.files('C:/Tesis/capas_procesadas', full.names = TRUE,
pattern = ".tif"))
list.rasters
list.rasters <- (list.files('C:/Tesis/Nueva carpeta', full.names = TRUE,
pattern = ".tif"))
list.rasters
plot(list.rasters)
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
list.rasters <- (list.files('C:/Tesis/Nueva carpeta', full.names = TRUE,
pattern = ".tif"))
list.rasters
rasters <- stack(list.rasters)
rasters
plot(rasters)
?CRS
projection(rasters) <-CRS("+proj=longlat +datum=WGS84")
plot(rasters)
st_read(rasters)
rasters.crop <- rasters
rasters.crop.reduced <-removeCollinearity(rasters.crop, multicollinearity.cutoff = 0.85,
select.variables = TRUE, sample.points = FALSE, plot = TRUE)
rasters.crop.reduced
rasters.selected <- subset(rasters.crop, c("Temperatura_media_anual1","incend_20191","LAI_2019",
"LST1","NMDI1","Precipitacion_anual1","Slope_Honduras","VCF1")
rasters.selected <- subset(rasters.crop, c("Temperatura_media_anual1","incend_20191","LAI_2019",
"LST1","NMDI1","Precipitacion_anual1","Slope_Honduras","VCF1"))
rasters.selected <- subset(rasters.crop, c("Temperatura_media_anual1","incend_20191","LAI_2019","LST1","NMDI1","Precipitacion_anual1","Slope_Honduras","VCF1"))
View(rasters.selected)
plot(rasters.selected)
presvals <- raster::extract(rasters.selected, gorg_geo)
presvals
View(presvals)
View(presvals)
rm(presvals)
list.rasters <- (list.files('C:/Tesis/Nueva carpeta', full.names = TRUE,
pattern = ".tif"))
list.rasters
rasters <- stack(list.rasters)
rasters
rasters.crop <- rasters
rasters.crop.reduced <-removeCollinearity(rasters.crop, multicollinearity.cutoff = 0.85,
select.variables = TRUE, sample.points = FALSE, plot = TRUE)
rasters.crop.reduced
rasters.selected <- subset(rasters.crop, c("DEM_de_Honduras1","incend_20191","LAI_2019","LST1","NMDI1","Precipitacion_anual1","Slope_Honduras","VCF1"))
plot(rasters.selected)
presvals <- raster::extract(rasters.selected, gorg_geo)
presvals
View(presvals)
View(presvals)
?SpatialPoints
library(readxl)
gorg_geo <- read_excel("gorg_geo.xls")
View(gorg_geo)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)-1
xmax=max(x)+3
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)-5
xmax=max(x)+3
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)-3
xmax=max(x)+3
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)-2
xmax=max(x)+3
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)-2
xmax=max(x)+2
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)-3
xmax=max(x)+3
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)-2
xmax=max(x)+3
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)-2
xmax=max(x)+2
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
x <- gorg_geo[,2]
y <- gorg_geo[,1]
xmin=min(x)-2
xmax=max(x)+3
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
list.rasters <- (list.files('C:/Tesis/Nueva carpeta', full.names = TRUE,
pattern = ".tif"))
list.rasters
rasters <- stack(list.rasters)
rasters
rasters.crop <- rasters
rasters.crop.reduced <-removeCollinearity(rasters.crop, multicollinearity.cutoff = 0.85,
select.variables = TRUE, sample.points = FALSE, plot = TRUE)
rasters.crop.reduced
rasters.selected <- subset(rasters.crop, c("DEM_de_Honduras1","incend_20191","LAI_2019","LST1","NMDI1","Precipitacion_anual1","Slope_Honduras","VCF1"))
presvals <- raster::extract(rasters.selected, gorg_geo)
presvals
coord_gorg <- SpatialPoints(gorg_geo, proj4string = CRS("+proj=longlat +datum=WGS84"))
class(coord_gorg)
class(gorg_geo)
presvals <- raster::extract(rasters.selected, coord_gorg)
presvals
plot(coord_gorg)
plot(gorg_geo)
plot(rasters.selected)
plot(rasters.selected[NDVI1])
plot(rasters.selected[NMDI1])
plot(gorg_geo)
plot(gorg_geo$Longitud,gorg_geo$Latitud)
gorg_geo <- read_excel("gorg_geo.xls")
View(gorg_geo)
plot(gorg_geo)
plot(gorg_geo)
x <- gorg_geo[,1]
y <- gorg_geo[,2]
xmin=min(x)-2
xmax=max(x)+3
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
x <- gorg_geo[,1]
y <- gorg_geo[,2]
xmin=min(x)-3
xmax=max(x)+3
ymin=min(y)-1
ymax=max(y)+2
maps::map(database = "world", xlim=c(xmin,xmax), ylim=c(ymin,ymax),
col = "blue", fill = TRUE)
box(which = "plot", lty = "solid", lxd=0.25)
axis(side = 1,cex.axis=0.7,lwd = 0.25)
axis(side=2,cex.axis=0.7, lwd = 0.25)
plot(gorg_geo)
class(gorg_geo)
coord_gorg <- SpatialPoints(gorg_geo, proj4string = CRS("+proj=longlat +datum=WGS84"))
plot(coord_gorg)
list.rasters <- (list.files('C:/Tesis/Resultado', full.names = TRUE,
pattern = ".tif"))
list.rasters
rasters <- stack(list.rasters)
rasters
list.rasters <- (list.files('C:/Tesis/Resultado', full.names = TRUE,
pattern = ".tif"))
list.rasters
list.rasters <- (list.files('C:/Tesis/Resultado', full.names = TRUE,
pattern = ".tif"))
list.rasters
rasters <- stack(list.rasters)
rasters
plot(rasters)
rasters.crop <- rasters
rasters.crop.reduced <-removeCollinearity(rasters.crop, multicollinearity.cutoff = 0.85,
select.variables = TRUE, sample.points = FALSE, plot = TRUE)
rasters.crop.reduced
rasters.selected <- subset(rasters.crop, c("TempMA","Incend","LAI","LST","NMDI","PrepAn","Slope","VCF"))
plot(rasters.selected)
presvals <- raster::extract(rasters.selected, coord_gorg)
presvals
plot(coord_gorg)
library(maps)
r[r<0]<-0
col.pal<-colorRampPalette(c(rgb(255,255,255,m=255),rgb(32,126,245,m=255),rgb(24,106,94,m=255),rgb(145,196,133,m=255),rgb(241,186,111,m=255),rgb(201,88,74,m=255)))(255)
plot(r,col=col.pal,interpolate=T)
map("world",add=TRUE)
presvals <- raster::extract(rasters.selected, coord_gorg)
presvals
?SpatialPoints
gorg_utm <- read_excel("gorg_utm.xls")
######################## Carpeta de trabajo ################################
setwd('C:/Tesis/capas_procesadas')
gorg_utm <- read_excel("gorg_utm.xls")
gorg_utm <- read_excel("gorg.xls")
plot(gorg_utm)
list.rasters <- (list.files('C:/Tesis/Nueva carpeta', full.names = TRUE,
pattern = ".tif"))
list.rasters
rasters <- stack(list.rasters)
rasters
rasters.crop <- rasters
rasters.crop.reduced <-removeCollinearity(rasters.crop, multicollinearity.cutoff = 0.85,
select.variables = TRUE, sample.points = FALSE, plot = TRUE)
rasters.crop.reduced
rasters.selected <- subset(rasters.crop, c("DEM_de_Honduras1","incend_20191","LAI_2019","LST1","NMDI1","Precipitacion_anual1","Slope_Honduras","VCF1"))
plot(rasters.selected)
coord_gorg <- SpatialPoints(gorg_geo)
coord_gorg <- SpatialPoints(gorg_utm)
class(coord_gorg)
plot(coord_gorg)
presvals <- raster::extract(rasters.selected, coord_gorg)
presvals
View(presvals)
library(raster)
library(XML)
library(dismo)
library(jsonlite)
library(graphics)
library(maps)
library(maptools)
library(sf)
library(rgeos)
library(rgdal)
library(virtualspecies)
library(corrplot)
library(usdm)
library(gtools)
library(tidyverse)
library(Hmisc)
library(rJava)
library(ENMeval)
library(MODIStsp)
library(readxl)
?set.seed
#################### Background #############################################
background <- randomPoints(rasters.selected, 3000)
absvals <- raster::extract(rasters.selected, background)
View(absvals)
rm
rm(background)
rm(absvals)
#################### Background #############################################
background <- randomPoints(rasters.selected, 3500)
absvals <- raster::extract(rasters.selected, background)
View(absvals)
pb <- c(rep(1,nrow(presvals)), rep(0, nrow(absvals)))
sdmdata.present <- data.frame(cbind(pb, rbind(presvals, absvals)))
getwd()
write.table(presvals, file = "C:/Tesis/capas_procesadas",quote = TRUE, sep = "\t", eol = "\n", na = "NA", dec = ",",
row.names = TRUE, qmethod = c("escape","double"))
write.table(presvals, file = "C:/Tesis/capas_procesadas",quote = TRUE, sep = "\t", eol = "\n", na = "NA", dec = ",", row.names = TRUE, qmethod = c("escape","double"))
plot(rasters.selected)
?maxent
View(gorg_utm)
View(gorg_utm)
model.maxent <-maxent(x=rasters.selected, p=gorg_utm, a=background,
args=c('randomtestpoints=20','betamultiplier=1',
'linear=true','quadratic=true','product=true',
'threshold=true','hinge=true','threads=2',
'responsecurves=true','jackknife=true',
'askoverwrite=false'
)
)
model.maxent
model.maxent <-maxent(x=rasters.selected, p=gorg_utm, a=background,
args=c('randomtestpoints=20','betamultiplier=1',
'linear=true','quadratic=true','product=true',
'threshold=true','hinge=true','threads=2',
'responsecurves=true','jackknife=true',
'askoverwrite=false'
)
)
class(rasters.selected)
class(gorg_utm)
model.maxent <-maxent(x=rasters.selected, p=coord_gorg, a=background,
args=c('randomtestpoints=20','betamultiplier=1',
'linear=true','quadratic=true','product=true',
'threshold=true','hinge=true','threads=2',
'responsecurves=true','jackknife=true',
'askoverwrite=false'
)
)
model.maxent
model.maxent <-maxent(x=rasters.selected, p=coord_gorg, a=background,
args=c('randomtestpoints=30','betamultiplier=1',
'linear=true','quadratic=true','product=true',
'threshold=true','hinge=true','threads=2',
'responsecurves=true','jackknife=true',
'askoverwrite=true'
)
)
model.maxent
background <- randomPoints(rasters.selected, 2000)
absvals <- raster::extract(rasters.selected, background)
pb <- c(rep(1,nrow(presvals)), rep(0, nrow(absvals)))
sdmdata.present <- data.frame(cbind(pb, rbind(presvals, absvals)))
View(background)
model.maxent <-maxent(x=rasters.selected, p=coord_gorg, a=background,
args=c('randomtestpoints=20','betamultiplier=1',
'linear=true','quadratic=true','product=true',
'threshold=true','hinge=true','threads=2',
'responsecurves=true','jackknife=true',
'askoverwrite=true'
)
)
model.maxent
background <- randomPoints(rasters.selected, 5000)
absvals <- raster::extract(rasters.selected, background)
pb <- c(rep(1,nrow(presvals)), rep(0, nrow(absvals)))
sdmdata.present <- data.frame(cbind(pb, rbind(presvals, absvals)))
model.maxent <-maxent(x=rasters.selected, p=coord_gorg, a=background,
args=c('randomtestpoints=20','betamultiplier=1',
'linear=true','quadratic=true','product=true',
'threshold=true','hinge=true','threads=2',
'responsecurves=true','jackknife=true',
'askoverwrite=true'
)
)
model.maxent
background <- randomPoints(rasters.selected, 8000)
absvals <- raster::extract(rasters.selected, background)
pb <- c(rep(1,nrow(presvals)), rep(0, nrow(absvals)))
sdmdata.present <- data.frame(cbind(pb, rbind(presvals, absvals)))
model.maxent <-maxent(x=rasters.selected, p=coord_gorg, a=background,
args=c('randomtestpoints=20','betamultiplier=1',
'linear=true','quadratic=true','product=true',
'threshold=true','hinge=true','threads=2',
'responsecurves=true','jackknife=true',
'askoverwrite=true'
)
)
model.maxent
background <- randomPoints(rasters.selected, 10000)
absvals <- raster::extract(rasters.selected, background)
pb <- c(rep(1,nrow(presvals)), rep(0, nrow(absvals)))
sdmdata.present <- data.frame(cbind(pb, rbind(presvals, absvals)))
background <- randomPoints(rasters.selected, 10000)
absvals <- raster::extract(rasters.selected, background)
pb <- c(rep(1,nrow(presvals)), rep(0, nrow(absvals)))
sdmdata.present <- data.frame(cbind(pb, rbind(presvals, absvals)))
model.maxent <-maxent(x=rasters.selected, p=coord_gorg, a=background,
args=c('randomtestpoints=20','betamultiplier=1',
'linear=true','quadratic=true','product=true',
'threshold=true','hinge=true','threads=2',
'responsecurves=true','jackknife=true',
'askoverwrite=true'
)
)
model.maxent
map.model.maxent <- predict(object = model.maxent, x=rasters.crop, na.rm=TRUE,
format='GTiff', filename='C:\Tesis\Resultado',
overwrite='TRUE', progress='text')
map.model.maxent <- predict(object = model.maxent, x=rasters.crop, na.rm=TRUE,
format='GTiff', filename='C:/Tesis/Resultado',
overwrite='TRUE', progress='text')
plot(map.model.maxent, main='modelo')
